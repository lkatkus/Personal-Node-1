# Used by Log class
[logging]
# Application name
name: srv
# Possible values: trace, debug, info, warn, error, fatal
level: trace
# Possible values: false, true (SLOW! - shows file and line where logging took place)
src: false
# Possible values: short, long, simple, json, bunyan
outputMode: long

# Hook to be executed after initialization but before starting servers (HTTP and HTTPS)
# module is required and should export class which will be instantiated with new
# If module exports more than one class - class property can be used to specify exact class
# If method is specified it will be executed with single callback parameter.
# If callback returns error as first parameter - startup sequence is terminated.
[beforeStart]
#module: ./src/Module
#class: ClassNameInModule
#method: methodNameInClass

# Hook to be executed after starting servers (HTTP and HTTPS)
# module is required and should export class which will be instantiated with new
# If module exports more than one class - class property can be used to specify exact class
# If method is specified it will be executed with single callback parameter.
# If callback returns error as first parameter - servers are shut down immediatelly and startup sequence is terminated.
[afterStart]
#module: ./src/Module
#class: ClassNameInModule
#method: methodNameInClass

# Used by srv-server.HTTPServer class
[server.http]
# Setting to true prevents HTTP starting server
disabled: false
# Server port
port: 8080
# Base path for HTTP server
basePath: /
# Name for router configuration
#routerName: httpRouter

# Used by srv-server.HTTPSServer class
[server.https]
# Setting to true prevents starting HTTPS server
disabled: true
# Server port
port: 8043
# Base path for HTTPS server
basePath: /
# File for SSL key
# Relative to path process.cwd()
sslKey: cert/server.key
# File for SSL certificate
# Relative to path process.cwd()
sslCert: cert/server.crt
# Name for router configuration
#routerName: httpsRouter

# Used by srv-server.Router class
[server.router]
# List of router middleware modules to be loaded separated by a comma (,)
# Modules are added to router in specified order
# Every specified module should be configured with 'server.router.moduleName' section
# Module configuration section should have 'module' property specifying name of module to load with require()
# Loaded module can export middleware class directly:
# module.exports = RouterModuleClass
# Or loded module can export middleware class as a property:
# exports.moduleName = RouterModuleClass
# then configuration should provide property name in 'class' property
modules: session, static, requestLog, serverError, upload, form, json, xml, BasicCrud

# Named router configuration example
#[server.router.httpRouter]
#modules: session, static, requestLog, serverError, upload, form, json, xml

#[server.router.httpsRouter]
#modules: session, static, requestLog, serverError, upload, form, json, xml

# Used by srv-server.Session class
[server.router.session]
module: srv-server
class: Session
# Session secret
secret: DoNotTe11@nyone
# Session timeout in miliseconds. 1000*60*30 = 1800000 (30 minutes)
maxAge: 1800000

# Used by srv-server.Static class
[server.router.static]
module: srv-server
class: Static
# Directory with static files (HTML, CSS, client JS etc.)
# Relative to path process.cwd()
dir: web
# Path for static files
# Relative to basePath
# Defaults to "/" if omitted
path: /
# List of index files separated by a comma (,)
# Defaults to index.html if omitted
index: index.html

# Used by srv-server.RequestLog class
[server.router.requestLog]
module: srv-server
class: RequestLog
# Logger name attached to request
logName: reqId
# Logs request start if set to true
requestStart: false

# Used by srv-server.ServerError class
[server.router.serverError]
module: srv-server
class: ServerError
# Path to default error page
# Relative to basePath
errorPage: /error

# Used by srv-server.Upload class
[server.router.upload]
module: srv-server
class: Upload
# Directory for uploaded files
# Relative to path process.cwd()
dir: web/uploads

# Used by srv-server.Form class
[server.router.form]
module: srv-server
class: Form
# Saves RAW request body to req.rawBody if set to true
rawBody: false

# Used by srv-server.JSON class
[server.router.json]
module: srv-server
class: JSON
# Maximum body size in bytes or string size representation
# Defaults to 100kb
limit: 100kb
# Saves RAW request body to req.rawBody if set to true
rawBody: false

# Used by srv-server.XML class
[server.router.xml]
module: srv-server
class: XML
# Saves RAW request body to req.rawBody if set to true
rawBody: false
# Maximum size of XML body
# Should be number of bytes or string in 'bytes' format:
# 1b 1kb 1mb 1gb 1tb
limit: 1mb

[server.router.BasicCrud]
module: ./src/BasicCrud